S45_pass_file_check_performance() {
  # Initialize module logging
  module_log_init "${FUNCNAME[0]}"
  module_title "Search password files (FAST MODE)"
  pre_module_reporter "${FUNCNAME[0]}"

  # Initialize variables
  local lPASS_FILES_FOUND=0
  local lPASSWD_STUFF_ARR=()
  local lSUDOERS=""
  local lWHO_HAS_BEEN_SUDO=""

  # Load paths to potential password files from config
  mapfile -t lPASSWD_STUFF_ARR < <(config_find "${CONFIG_DIR}/pass_files.cfg")

  # Handle missing config
  if [[ "${lPASSWD_STUFF_ARR[0]-}" == "C_N_F" ]]; then
    print_output "[!] Config not found"
  
  # If config found and entries exist
  elif [[ ${#lPASSWD_STUFF_ARR[@]} -gt 0 ]]; then

    # Collect all non-comment sudoers entries across paths
    while IFS= read -r file; do
      [[ -f "$file" ]] && lSUDOERS+=$'\n'"$(grep -hEv '^\s*($|#)' "$file" 2>/dev/null)"
    done < <(mod_path "/ETC_PATHS/sudoers")

    # Identify accounts that have recently sudoed
    lWHO_HAS_BEEN_SUDO=$(find "${FIRMWARE_PATH}" "${EXCL_FIND[@]}" -xdev -name .sudo_as_admin_successful 2>/dev/null)

    # If password files, sudoers, or sudo traces exist, process them
    if (( ${#lPASSWD_STUFF_ARR[@]} || ${#lSUDOERS} || ${#lWHO_HAS_BEEN_SUDO} )); then
      print_output "[+] Found ${#lPASSWD_STUFF_ARR[@]} password-related files:"

      # Analyze each potential password file
      for path in "${lPASSWD_STUFF_ARR[@]}"; do
        print_output "$(indent "$(print_path "$path")")"

        # Only check regular, non-executable files
        if [[ -f "$path" && ! -x "$path" ]]; then
          local content
          content=$(< "$path") # Read file once into memory

          # Identify root accounts (UID 0)
          local lROOT_ACCOUNTS=$(awk -F: '$3==0 {print $1}' <<< "$content" 2>/dev/null || true)

          # Find passwd-format entries with passwords
          local lPOSSIBLE_PASSWD=$(grep -hE '^[a-zA-Z0-9]+:.:[0-9]+:[0-9]+([^:]*:){3}[^:]*$' <<< "$content" | grep -vE ':(x|\*|!)' || true)

          # Find shadow-format hashed passwords
          local lPOSSIBLE_SHADOWS=$(grep -hE '^[a-zA-Z0-9]+:\$[0-9a-z]\$.*:[0-9]+:[0-9]+:[0-9]+([^:]*:){4}[^:]*' <<< "$content" | grep -vE ':(x|\*|!)' || true)

          # Report findings
          if [[ -n "$lROOT_ACCOUNTS" ]]; then
            print_output "$(indent "$(green "Identified the following root accounts:")")"
            print_output "$(indent "$(indent "$(orange "$lROOT_ACCOUNTS")")")"
          fi

          if [[ -n "$lPOSSIBLE_PASSWD" || -n "$lPOSSIBLE_SHADOWS" ]]; then
            print_output "$(indent "$(green "Found passwords or weak configuration:")")"
            lPASS_FILES_FOUND=1
            [[ -n "$lPOSSIBLE_SHADOWS" ]] && print_output "$(indent "$(indent "$(orange "$lPOSSIBLE_SHADOWS")")")"
            [[ -n "$lPOSSIBLE_PASSWD" ]] && print_output "$(indent "$(indent "$(orange "$lPOSSIBLE_PASSWD")")")"
          fi
        fi
      done

      # Output sudoers contents if found
      [[ -n "$lSUDOERS" ]] && {
        print_output "[+] Sudoers configuration:"
        print_output "$(indent "$(orange "$lSUDOERS")")"
      }

      # Output users who have sudoed if found
      [[ -n "$lWHO_HAS_BEEN_SUDO" ]] && {
        print_output "[+] Accounts that have recently used sudo:"
        print_output "$(indent "$(orange "$lWHO_HAS_BEEN_SUDO")")"
      }
    fi

    # Log overall statistics
    write_log ""
    write_log "[*] Statistics: ${lPASS_FILES_FOUND}"
  
  else
    # No password files found
    print_output "[-] No password files found"
  fi

  # End module logging
  module_end_log "${FUNCNAME[0]}" "${#lPASSWD_STUFF_ARR[@]}"
}